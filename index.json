{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-17T15:50:56.984Z",
    "end": "2021-10-17T15:51:00.680Z",
    "duration": 3696,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9dc07ede-249a-4934-b28a-fded4ae9ef59",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4183ef9f-6f8f-41cf-921f-0d03769d9bef",
          "title": "Stream Tests",
          "fullFile": "/home/runner/work/CriblAssessment/CriblAssessment/test/stream.test.js",
          "file": "/test/stream.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Data Setup in \"Stream Tests\"",
              "fullTitle": "Stream Tests \"before all\" hook: Data Setup in \"Stream Tests\"",
              "timedOut": false,
              "duration": 2900,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const file = \"./agent/inputs/large_1M_events.log\";\neventSet = await fr.fileReader(file);\n// console.log(\"back in before method\");\nconst file2 = \"./output/events1.log\";\ngatheredSet = await fr.fileReader(file2);\n// console.log(\"back in before method\");\nconst file3 = \"./output/events2.log\";\ngatheredSet2 = await fr.fileReader(file3);\n// console.log(\"back in before method\");",
              "err": {},
              "uuid": "bf067c5a-0d5b-434d-8050-573cac41259b",
              "parentUUID": "4183ef9f-6f8f-41cf-921f-0d03769d9bef",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3bceff5e-4de9-4315-a30c-0a520cd8400a",
              "title": "Happy Path Tests",
              "fullFile": "/home/runner/work/CriblAssessment/CriblAssessment/test/stream.test.js",
              "file": "/test/stream.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify All Inputs are accounted for in the Targets",
                  "fullTitle": "Stream Tests Happy Path Tests Verify All Inputs are accounted for in the Targets",
                  "timedOut": false,
                  "duration": 643,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tempSet = new Set(eventSet);\nhelper.removeAll(tempSet, gatheredSet2);\nhelper.removeAll(tempSet, gatheredSet);\n// console.log(tempSet.size);\nconsole.log(\"missing lines:\", tempSet.size);\nconsole.log(\"gathered lines:\", gatheredSet.size);\nconsole.log(\"gathered2 lines:\", gatheredSet2.size);\nconsole.log(\"input lines:\", eventSet.size);\n// const expect = chai.expect;\nexpect(tempSet,`Data from input file is missing in target sources. Missing data size: ${tempSet.size}`).to.be.empty\n// assert.lengthOf(tempSet.size,0, `Data from input file are missing in target sources. Missing data size: ${tempSet.size}`)\n// console.log(tempSet);",
                  "err": {},
                  "uuid": "d935942b-6f29-4dd5-a0ea-6fec686fa60f",
                  "parentUUID": "3bceff5e-4de9-4315-a30c-0a520cd8400a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify No Duplicate Entries between the target entries",
                  "fullTitle": "Stream Tests Happy Path Tests Verify No Duplicate Entries between the target entries",
                  "timedOut": false,
                  "duration": 149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const interSet = helper.intersection(gatheredSet, gatheredSet2);\n// console.log(tempSet.size);\nconsole.log(\"intersections lines:\", interSet.size);\nconsole.log(\"gathered lines:\", gatheredSet.size);\nconsole.log(\"gathered2 lines:\", gatheredSet2.size);\n// const expect = chai.expect;\nexpect(interSet,`Data from input file seems to be on multiple target sources. Number of duplicates: ${interSet.size}`).to.be.empty\n// console.log(tempSet);",
                  "err": {},
                  "uuid": "3441f9c5-a52a-455f-9391-0a05a06059bf",
                  "parentUUID": "3bceff5e-4de9-4315-a30c-0a520cd8400a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d935942b-6f29-4dd5-a0ea-6fec686fa60f",
                "3441f9c5-a52a-455f-9391-0a05a06059bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 792,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.2.0"
    }
  }
}